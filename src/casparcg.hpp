////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef SRC_CASPARCG_HPP
#define SRC_CASPARCG_HPP

////////////////////////////////////////////////////////////////////////////////
#include <QList>
#include <QObject>
#include <QString>
#include <QtNetwork/QTcpSocket>

////////////////////////////////////////////////////////////////////////////////
namespace src
{

////////////////////////////////////////////////////////////////////////////////
struct media
{
    enum type { audio, movie, still };

    enum type type;
    QString path;
};

////////////////////////////////////////////////////////////////////////////////
class casparcg : public QObject
{
    Q_OBJECT

public:
    ////////////////////
    casparcg(const QString& name, quint16 port, QObject* parent = nullptr);
    ~casparcg();

    bool is_connected() const { return socket_.state() == QTcpSocket::ConnectedState; }

    ////////////////////
    QList<media> scan();

signals:
    ////////////////////
    void connected();
    void disconnected();
    void failed(const QString&);

private:
    ////////////////////
    QTcpSocket socket_;
};

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif
