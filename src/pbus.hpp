////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef SRC_PBUS_HPP
#define SRC_PBUS_HPP

////////////////////////////////////////////////////////////////////////////////
#include <QByteArray>
#include <QObject>
#include <QtSerialPort/QSerialPort>

////////////////////////////////////////////////////////////////////////////////
namespace src
{

////////////////////////////////////////////////////////////////////////////////
class pbus : public QObject
{
    Q_OBJECT

public:
    ////////////////////
    explicit pbus(const QString&, int device, QObject* parent = nullptr);

signals:
    ////////////////////
    void opened();
    void closed();

    void   play(int n);
    void  pause(int n);
    void resume(int n);
    void   stop(int n);

    void info(const QString&);
    void warn(const QString&);
    void fail(const QString&);

private:
    ////////////////////
    QSerialPort port_;

    int device_;
    int reg_ = -1;

    QByteArray store_;
    void read();
};

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif
